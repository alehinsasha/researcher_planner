
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ДобавитьРеквизитИЭлементУправленияПланировщика();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПоложенияШкалыВремениПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтображенияВремениЭлементовПланировщикаПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаПериодическогоВариантаПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура КратностьПериодическогоВариантаРегулирование(Элемент, Направление, СтандартнаяОбработка)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПеренесенныеЗаголовкиПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТекущуюДатуПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПеренесенныеЗаголовкиШкалыВремениПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыравниватьГраницыЭлементовПоШкалеВремениПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТекущиеПериодыОтображения

&НаКлиенте
Процедура ТекущиеПериодыОтображенияДатаНачалаПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеПериодыОтображенияДатаОкончанияПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ЭлементыШкалыВремени

&НаКлиенте
Процедура ЭлементыШкалыВремениЕдиницаПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыШкалыВремениКратностьПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыШкалыВремениФорматПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоИзмерений

&НаКлиенте
Процедура ЭлементыШкалыВремениПриИзменении(Элемент)

	ОбновитьПланировщик(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИзмеренийЗначениеПриИзменении(Элемент)
	
	ОбновитьВыпадающиеСпискиИзмеренийИЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДанныеПланировщика

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПланировщик(Команда)
	//TODO: Вставить содержимое обработчика}
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьНастройки(Команда)

	НовоеЗначение = Не Элементы.ГруппаНастройки.Видимость;
	
	Элементы.ГруппаНастройки.Видимость = НовоеЗначение;
	Элементы.ФормаСкрытьПоказатьНастройки.Пометка = НовоеЗначение;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзмерение(Команда)
	
	НоваяСтрока = ДеревоИзмерений.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ВидЗначенияДереваИзмерений = ВидыЗначенийДереваИзмерений().Измерение;
	
	Элементы.ДеревоИзмерений.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементИзмерения(Команда)
	
	ТекущиеДанные = Элементы.ДеревоИзмерений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееИзмерение = ТекущиеДанные.ПолучитьРодителя();
	Если ТекущееИзмерение = Неопределено Тогда
		НоваяСтрока = ТекущиеДанные.ПолучитьЭлементы().Добавить();	
	Иначе
		НоваяСтрока = ТекущееИзмерение.ПолучитьЭлементы().Добавить();	
	КонецЕсли;
	НоваяСтрока.ВидЗначенияДереваИзмерений = ВидыЗначенийДереваИзмерений().ЭлементИзмерения;
	
	Элементы.ДеревоИзмерений.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементПланировщика(Команда)

	НоваяСтрока = ДанныеПланировщика.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ЭтоДанные = Истина;
	Элементы.ДанныеПланировщика.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();

КонецПроцедуры

&НаКлиенте
Процедура ПривязатьЭлементПланировщикаКИзмерению(Команда)

	ТекущиеДанные = Элементы.ДанныеПланировщика.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийЭлементПланировщика = ТекущиеДанные.ПолучитьРодителя();
	Если ТекущийЭлементПланировщика = Неопределено Тогда
		НоваяСтрока = ТекущиеДанные.ПолучитьЭлементы().Добавить();	

		Элементы.ДанныеПланировщика.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Иначе
		НоваяСтрока = ТекущийЭлементПланировщика.ПолучитьЭлементы().Добавить();	

		Элементы.ДанныеПланировщика.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьРеквизитИЭлементУправленияПланировщика()
	
	// Добавляю реквизит
	ДобавляемыеРеквизиты = Новый Массив();
	
	ТипПланировщик = Новый ОписаниеТипов("Планировщик");
	
	НовыйРеквизит = Новый РеквизитФормы("Планировщик", ТипПланировщик);
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Добавляю элемент управления
	НовыйЭлемент = Элементы.Добавить("Планировщик", Тип("ПолеФормы"), Элементы.ГруппаПланировщик);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеПланировщика;
	НовыйЭлемент.ПутьКДанным = "Планировщик";
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
КонецПроцедуры

&НаКлиенте
Функция ВидыЗначенийДереваИзмерений()
	
	Результат = Новый Структура();
	Результат.Вставить("Измерение", "Измерение");
	Результат.Вставить("ЭлементИзмерения", "ЭлементИзмерения");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВыпадающиеСпискиИзмеренийИЭлементов()

	ДанныеСтроки = Элементы.ДеревоИзмерений.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСписок = Неопределено;
	Если ДанныеСтроки.ВидЗначенияДереваИзмерений = ВидыЗначенийДереваИзмерений().Измерение Тогда
		ТекущийСписок = Элементы.ДанныеПланировщикаИзмерение.СписокВыбора;
	ИначеЕсли ДанныеСтроки.ВидЗначенияДереваИзмерений = ВидыЗначенийДереваИзмерений().ЭлементИзмерения Тогда
		ТекущийСписок = Элементы.ДанныеПланировщикаЭлементИзмерения.СписокВыбора;
	Иначе 
		ВызватьИсключение "Не обрабатываемый вид значения дерева измерений";
	КонецЕсли;
	
	Если ТекущийСписок = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущееЗначение = ДанныеСтроки.Значение;
	Если Не ЗначениеЗаполнено(ТекущееЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийСписок.НайтиПоЗначению(ТекущееЗначение) = Неопределено Тогда
		ТекущийСписок.Добавить(ТекущееЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
